{"version":3,"sources":["../../node_modules/classnames/index.js","wrapper-block-example.js"],"names":["__","wp","i18n","registerBlockType","blocks","Fragment","element","editor","InnerBlocks","InspectorControls","components","PanelBody","RangeControl","title","icon","category","keywords","attributes","colNumber","type","edit","setAttributes","className","val","save","styles","classes"],"mappings":"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","file":"wrapper-block-example.js","sourceRoot":"../assets/js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * BLOCK: css-columns-wrapper-block-wp-plugin/css-columns\n */\n\nimport classNames from 'classnames'; // Used to to join classes together\n\nconst { __ } = wp.i18n; // Import __() from wp.i18n\nconst { registerBlockType } = wp.blocks; // Import registerBlockType() from wp.blocks\nconst {\n\tFragment, // Used to wrap our edit component and only have one root element\n} = wp.element;\nconst {\n\tInnerBlocks, // Allows it to place child blocks inside our block\n\tInspectorControls, // We place our select control inside the inspector controls which show up on the right of the editor\n} = wp.editor;\nconst {\n\tPanelBody, // A panel where we place our select control in (creates a collapsable element)\n\tRangeControl, \n} = wp.components;\n\nregisterBlockType( 'css-columns-wrapper-block-wp-plugin/wrapper-block', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __( 'Auto columns', 'css-columns-wrapper-block' ), // Block title.\n\ticon: 'editor-table', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'layout', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tkeywords: [\n\t\t__( 'Columns', 'css-columns-wrapper-block' ),\n\t\t__( 'Wrapper Block', 'css-columns-wrapper-block' ),\n\t],\n\n\tattributes: {\n\t\t// Register colNumber attribute to save the chosen number\n\t\tcolNumber: {\n\t\t\ttype: 'number',\n\t\t},\n\t},\n\n\tedit( { attributes, setAttributes, className } ) {\n\t\tconst {\n\t\t\tcolNumber = 1,\n\t\t} = attributes;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={ __( 'Number of Columns', 'css-columns-wrapper-block' ) }\n\t\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t\t>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Number of Columns', 'css-columns-wrapper-block' ) }\n\t\t\t\t\t\t\t\tvalue={ colNumber }\n\t\t\t\t\t\t\t\thelp={ __( 'Content will flow into multiple columns automatically.', 'css-columns-wrapper-block' ) }\n\t\t\t\t\t\t\t\tonChange={ ( val ) => setAttributes( { colNumber: val } ) }\n\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\tinitialPosition={ 1 }\n\t\t\t\t\t\t\t\tmax={ 3 }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ className }\n\t\t\t\t>\n\t\t\t\t\t<InnerBlocks />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t},\n\n\tsave( { attributes, className } ) {\n\t\tconst {\n\t\t\tcolNumber = '',\n\t\t} = attributes;\n\n\t\tlet styles = {};\n\t\tlet classes = className;\n\n\t\t// Only set attributes when number is chosen\n\t\tif ( '' !== colNumber ) {\n\t\t\tstyles = { 'columns': `${ colNumber }` };\n\t\t\t// Use classnames library to join all classes together\n\t\t\tclasses = classNames( `col-${ colNumber }`, classes );\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={ classes }\n\t\t\t\tstyle={ styles }\n\t\t\t>\n\t\t\t\t<InnerBlocks.Content />\n\t\t\t</div>\n\t\t);\n\t},\n} );\n"]}