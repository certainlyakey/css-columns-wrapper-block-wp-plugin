{"version":3,"sources":["../../node_modules/classnames/index.js","wrapper-block-example.js"],"names":["__","wp","i18n","registerBlockType","blocks","Fragment","element","editor","InnerBlocks","InspectorControls","components","PanelBody","SelectControl","title","icon","category","keywords","supports","align","attributes","bgColor","type","edit","setAttributes","className","value","label","selectedOption","backgroundColor","save","padding"],"mappings":";;AAoDA,IAAA,GA7CA,WACA,aAEA,IAAA,EAAA,GAAA,eAEA,SAAA,IAGA,IAFA,IAAA,EAAA,GAEA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CACA,IAAA,EAAA,UAAA,GACA,GAAA,EAAA,CAEA,IAAA,SAAA,EAEA,GAAA,WAAA,GAAA,WAAA,EACA,EAAA,KAAA,QACA,GAAA,MAAA,QAAA,IAAA,EAAA,OAAA,CACA,IAAA,EAAA,EAAA,MAAA,KAAA,GACA,GACA,EAAA,KAAA,QAEA,GAAA,WAAA,EACA,IAAA,IAAA,KAAA,EACA,EAAA,KAAA,EAAA,IAAA,EAAA,IACA,EAAA,KAAA,IAMA,OAAA,EAAA,KAAA,KAGA,oBAAA,QAAA,OAAA,SACA,EAAA,QAAA,EACA,OAAA,QAAA,GACA,mBAAA,GAAA,iBAAA,EAAA,KAAA,EAAA,IAEA,EAAA,aAAA,GAAA,WACA,OAAA,IAGA,OAAA,WAAA,EA1CA;;ACWA,aAdA,IAAA,EAAA,EAAA,QAAA,eAcA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAZQA,IAAAA,EAAOC,GAAGC,KAAVF,GACAG,EAAsBF,GAAGG,OAAzBD,kBACAE,EAAaJ,GAAGK,QAAhBD,SAIJJ,EAAAA,GAAGM,OAFNC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,kBAKGR,EAAAA,GAAGS,WAFNC,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,cAGDT,EAAmB,sCAAuC,CAEzDU,MAAOb,EAAI,aAAc,yBACzBc,KAAM,eACNC,SAAU,SACVC,SAAU,CACThB,EAAI,aAAc,yBAClBA,EAAI,gBAAiB,0BAGtBiB,SAAU,CACTC,OAAO,GAGRC,WAAY,CACXC,QAAS,CACRC,KAAM,WAIRC,KAAiD,SAAA,GAAzCH,IAAAA,EAAAA,EAAAA,WAAYI,EAAAA,EAAAA,cAAeC,EAAAA,EAAAA,UAG9BL,EAAAA,EADHC,QAAAA,OAAU,IAAA,EAAA,GAFqC,EAM/C,OAAA,MAAC,cAAA,EACA,KAAA,MAAC,cAAA,EACA,KAAA,MAAC,cAAA,EAAD,CACC,MAAQpB,EAAI,mBAAoB,yBAChC,aAAc,GAEd,MAAC,cAAA,EAAD,CACC,MAAQA,EAAI,mBAAoB,yBAChC,MAAQoB,EACR,QAAU,CACT,CACCK,MAAO,GACPC,MAAO1B,EAAI,sBAAuB,0BAEnC,CACCyB,MAAO,gBACPC,MAAO1B,EAAI,aAAc,0BAE1B,CACCyB,MAAO,SACPC,MAAO1B,EAAI,SAAU,2BAGvB,SAAW,SAAE2B,GAAoBJ,OAAAA,EAAe,CAAEH,QAASO,SAI9D,MAAA,cAAA,MAAA,CACC,UAAYH,EACZ,MAAQ,CAAEI,gBAAiBR,IAE3B,MAAC,cAAA,EAJF,SAUHS,KAAkC,SAAA,GAA1BV,IAAAA,EAAAA,EAAAA,WAAYK,EAAAA,EAAAA,UAGfL,EAAAA,EADHC,QAAAA,OAAU,IAAA,EAAA,GAFsB,EAMhC,OAAA,MAAA,cAAA,MAAA,CACC,WAAY,EAAY,EAAA,SAAA,wBAAgCA,MAAAA,OAAAA,GAAYI,GACpE,MAAQ,CAAEI,gBAAiBR,EAASU,QAAS,SAE7C,MAAC,cAAA,EAAY,QAJd","file":"wrapper-block-example.js","sourceRoot":"../assets/js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * BLOCK: wrapper-block-example/background\n */\n\nimport classNames from 'classnames';\n\nconst { __ } = wp.i18n; // Import __() from wp.i18n\nconst { registerBlockType } = wp.blocks; // Import registerBlockType() from wp.blocks\nconst { Fragment } = wp.element;\nconst {\n\tInnerBlocks,\n\tInspectorControls,\n} = wp.editor;\nconst {\n\tPanelBody,\n\tSelectControl,\n} = wp.components;\n\nregisterBlockType( 'wrapper-block-example/wrapper-block', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __( 'Background', 'wrapper-block-example' ), // Block title.\n\ticon: 'editor-table', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'layout', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tkeywords: [\n\t\t__( 'Background', 'wrapper-block-example' ),\n\t\t__( 'Wrapper Block', 'wrapper-block-example' ),\n\t],\n\n\tsupports: {\n\t\talign: false,\n\t},\n\n\tattributes: {\n\t\tbgColor: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\n\tedit( { attributes, setAttributes, className } ) {\n\t\tconst {\n\t\t\tbgColor = '',\n\t\t} = attributes;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={ __( 'Background Color', 'wrapper-block-example' ) }\n\t\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t\t>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Background Color', 'wrapper-block-example' ) }\n\t\t\t\t\t\t\tvalue={ bgColor }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\tlabel: __( 'No Background Color', 'wrapper-block-example' ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'paleturquoise',\n\t\t\t\t\t\t\t\t\tlabel: __( 'Light Blue', 'wrapper-block-example' ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'orange',\n\t\t\t\t\t\t\t\t\tlabel: __( 'Orange', 'wrapper-block-example' ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChange={ ( selectedOption ) => setAttributes( { bgColor: selectedOption } ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\tstyle={ { backgroundColor: bgColor } }\n\t\t\t\t>\n\t\t\t\t\t<InnerBlocks />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t},\n\n\tsave( { attributes, className } ) {\n\t\tconst {\n\t\t\tbgColor = '',\n\t\t} = attributes;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={ classNames( 'wrapper-block-example', `bg-${ bgColor }`, className ) }\n\t\t\t\tstyle={ { backgroundColor: bgColor, padding: '10px' } }\n\t\t\t>\n\t\t\t\t<InnerBlocks.Content />\n\t\t\t</div>\n\t\t);\n\t},\n} );\n"]}