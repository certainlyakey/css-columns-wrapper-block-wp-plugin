{"version":3,"sources":["../../node_modules/classnames/index.js","css-columns-wrapper-block.js"],"names":["__","wp","i18n","registerBlockType","blocks","Fragment","element","editor","InnerBlocks","InspectorControls","components","PanelBody","RangeControl","title","icon","category","keywords","attributes","colNumber","type","edit","setAttributes","className","val","save","styles","classes"],"mappings":";;AAoDA,IAAA,GA7CA,WACA,aAEA,IAAA,EAAA,GAAA,eAEA,SAAA,IAGA,IAFA,IAAA,EAAA,GAEA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CACA,IAAA,EAAA,UAAA,GACA,GAAA,EAAA,CAEA,IAAA,SAAA,EAEA,GAAA,WAAA,GAAA,WAAA,EACA,EAAA,KAAA,QACA,GAAA,MAAA,QAAA,IAAA,EAAA,OAAA,CACA,IAAA,EAAA,EAAA,MAAA,KAAA,GACA,GACA,EAAA,KAAA,QAEA,GAAA,WAAA,EACA,IAAA,IAAA,KAAA,EACA,EAAA,KAAA,EAAA,IAAA,EAAA,IACA,EAAA,KAAA,IAMA,OAAA,EAAA,KAAA,KAGA,oBAAA,QAAA,OAAA,SACA,EAAA,QAAA,EACA,OAAA,QAAA,GACA,mBAAA,GAAA,iBAAA,EAAA,KAAA,EAAA,IAEA,EAAA,aAAA,GAAA,WACA,OAAA,IAGA,OAAA,WAAA,EA1CA;;ACaA,aAhBA,IAAA,EAAA,EAAA,QAAA,eAgBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAdQA,IAAAA,EAAOC,GAAGC,KAAVF,GACAG,EAAsBF,GAAGG,OAAzBD,kBAEPE,EACGJ,GAAGK,QADND,SAKGJ,EAAAA,GAAGM,OAFNC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,kBAKGR,EAAAA,GAAGS,WAFNC,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,aAGDT,EAAmB,oDAAqD,CAEvEU,MAAOb,EAAI,eAAgB,6BAC3Bc,KAAM,eACNC,SAAU,SACVC,SAAU,CACThB,EAAI,UAAW,6BACfA,EAAI,gBAAiB,8BAGtBiB,WAAY,CAEXC,UAAW,CACVC,KAAM,WAIRC,KAAiD,SAAA,GAAzCH,IAAAA,EAAAA,EAAAA,WAAYI,EAAAA,EAAAA,cAAeC,EAAAA,EAAAA,UAG9BL,EAAAA,EADHC,UAAAA,OAAY,IAAA,EAAA,EAFmC,EAM/C,OAAA,MAAC,cAAA,EACA,KAAA,MAAC,cAAA,EACA,KAAA,MAAC,cAAA,EAAD,CACC,MAAQlB,EAAI,oBAAqB,6BACjC,aAAc,GAEd,MAAC,cAAA,EAAD,CACE,MAAQA,EAAI,oBAAqB,6BACjC,MAAQkB,EACR,KAAOlB,EAAI,yDAA0D,6BACrE,SAAW,SAAEuB,GAASF,OAAAA,EAAe,CAAEH,UAAWK,KAClD,IAAM,EACN,gBAAkB,EAClB,IAAM,MAIV,MAAA,cAAA,MAAA,CACC,UAAYD,GAEZ,MAAC,cAAA,EAHF,SASHE,KAAkC,SAAA,GAA1BP,IAAAA,EAAAA,EAAAA,WAAYK,EAAAA,EAAAA,UAGfL,EAAAA,EADHC,UAAAA,OAAY,IAAA,EAAA,GAFoB,EAK7BO,EAAS,GACTC,EAAUJ,EAUb,MAPI,KAAOJ,IACXO,EAAS,CAAiBP,QAAAA,GAAAA,OAAAA,IAE1BQ,GAAU,EAAYR,EAAAA,SAAAA,EAAY,EAAYA,OAAAA,OAAAA,EAA4B,iBAAA,GAAIQ,IAI9E,MAAA,cAAA,MAAA,CACC,UAAYA,EACZ,MAAQD,GAER,MAAC,cAAA,EAAY,QAJd","file":"css-columns-wrapper-block.js","sourceRoot":"../assets/js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * BLOCK: css-columns-wrapper-block-wp-plugin/css-columns\n */\n\nimport classNames from 'classnames'; // Used to to join classes together\n\nconst { __ } = wp.i18n; // Import __() from wp.i18n\nconst { registerBlockType } = wp.blocks; // Import registerBlockType() from wp.blocks\nconst {\n\tFragment, // Used to wrap our edit component and only have one root element\n} = wp.element;\nconst {\n\tInnerBlocks, // Allows it to place child blocks inside our block\n\tInspectorControls, // We place our select control inside the inspector controls which show up on the right of the editor\n} = wp.editor;\nconst {\n\tPanelBody, // A panel where we place our select control in (creates a collapsable element)\n\tRangeControl, \n} = wp.components;\n\nregisterBlockType( 'css-columns-wrapper-block-wp-plugin/wrapper-block', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __( 'Auto columns', 'css-columns-wrapper-block' ), // Block title.\n\ticon: 'editor-table', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'layout', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tkeywords: [\n\t\t__( 'Columns', 'css-columns-wrapper-block' ),\n\t\t__( 'Wrapper Block', 'css-columns-wrapper-block' ),\n\t],\n\n\tattributes: {\n\t\t// Register colNumber attribute to save the chosen number\n\t\tcolNumber: {\n\t\t\ttype: 'number',\n\t\t},\n\t},\n\n\tedit( { attributes, setAttributes, className } ) {\n\t\tconst {\n\t\t\tcolNumber = 1,\n\t\t} = attributes;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={ __( 'Number of Columns', 'css-columns-wrapper-block' ) }\n\t\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t\t>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Number of Columns', 'css-columns-wrapper-block' ) }\n\t\t\t\t\t\t\t\tvalue={ colNumber }\n\t\t\t\t\t\t\t\thelp={ __( 'Content will flow into multiple columns automatically.', 'css-columns-wrapper-block' ) }\n\t\t\t\t\t\t\t\tonChange={ ( val ) => setAttributes( { colNumber: val } ) }\n\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\tinitialPosition={ 1 }\n\t\t\t\t\t\t\t\tmax={ 3 }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ className }\n\t\t\t\t>\n\t\t\t\t\t<InnerBlocks />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t},\n\n\tsave( { attributes, className } ) {\n\t\tconst {\n\t\t\tcolNumber = '',\n\t\t} = attributes;\n\n\t\tlet styles = {};\n\t\tlet classes = className;\n\n\t\t// Only set attributes when number is chosen\n\t\tif ( '' !== colNumber ) {\n\t\t\tstyles = { 'columns': `${ colNumber }` };\n\t\t\t// Use classnames library to join all classes together\n\t\t\tclasses = classNames( colNumber > 1 ? `has-${ colNumber }-auto-columns` : '', classes );\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={ classes }\n\t\t\t\tstyle={ styles }\n\t\t\t>\n\t\t\t\t<InnerBlocks.Content />\n\t\t\t</div>\n\t\t);\n\t},\n} );\n"]}